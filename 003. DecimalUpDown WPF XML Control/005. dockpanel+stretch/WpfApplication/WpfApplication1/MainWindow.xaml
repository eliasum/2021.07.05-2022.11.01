<Window x:Class="WpfApplication1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:my="clr-namespace:ClassLibrary1;assembly=ClassLibrary1"
        Title="Пример демонстрирующий привязку WPF-формы к XML-данным"
        WindowStartupLocation="CenterScreen" Height="100" Width="500">
    <!--
    2021.08.11 11:18 IMM
    
    1. FrameworkElement.DataContext Свойство - Получает или задает контекст данных для элемента,
    участвующего в привязке данных. Значением свойства является объект, используемый в качестве 
    контекста данных; в данном случае это объект класса XmlDataProvider, получающий встроенные 
    в XAML XML-данные.
    2. XmlDataProvider - класс поставщик, который предлагает быстрый и простой способ извлечения
    XML-данных из отдельного файла, местоположения в Интернете или ресурса приложения, 
    а также обеспечения их доступности элементам приложения. При работе с XmlDataProvider
    используется свойство Binding.XPath. Это позволяет погружаться в XML-разметку
    настолько глубоко, насколько нужно.
    3. DataSourceProvider.IsInitialLoadEnabled Свойство - получает или задает значение, которое 
    указывает, должна ли быть заблокирована либо задержана автоматическая загрузка данных.
    True - автоматическая загрузка данных не должна быть заблокирована или задержана.
    4. <x:XData> - Встроенный тип XAML x:XData - Включает размещение островов XML-данных в
    рабочей среде XAML. XML-элементы внутри x:XData не должны обрабатываться обработчиками XAML
    так, как если бы они были частью действующего пространства имен XAML по умолчанию или
    любого другого пространства имен XAML. x:XData может содержать произвольный XML-файл 
    правильного формата.
    -->

    <!--подгружаем XML-данные в Window.DataContext-->
    <Window.DataContext>
        <XmlDataProvider IsInitialLoadEnabled="True" IsAsynchronous="False">
            <x:XData>
                <!--начало XML-данных-->
                <Configuration title="Конфигурация программного обеспечения" xmlns="">
                    <Equipment title="Оборудование установки">
                        <Parameter title="Параметр" description="Параметр оборудования">
                            <Amperage value="5" title="Ток" description="Значение тока" symbol="I" format="F2" unit="мАмАмА">
                                <Step value=".05" title="Шаг значения" description="Шаг значения напряжения"/>
                                <Limit title="Предельные значения" description="Предельные значения тока">
                                    <Minimum value="0" title="Минимум" description="Минимальнеое предельные значения" symbol="Imin"/>
                                    <Maximum value="10" title="Максимум" description="Максимальное предельные значения" symbol="Imax"/>
                                </Limit>
                            </Amperage>
                            <Voltage value="220" title="Напряжение" description="Значение напряжения" symbol="U" format="N0" unit="ВfВfВf">
                                <Step value="1" title="Шаг значения" description="Шаг значения напряжения"/>
                                <Limit title="Предельные значения" description="Предельные значения тока">
                                    <Minimum value="0" title="Минимум" description="Минимальнеое предельные значения" symbol="Umin"/>
                                    <Maximum value="250" title="Максимум" description="Максимальное предельные значения" symbol="Umax"/>
                                </Limit>
                            </Voltage>
                        </Parameter>
                    </Equipment>
                </Configuration>
                <!--конец XML-данных-->
            </x:XData>
        </XmlDataProvider>
    </Window.DataContext>

    <!--
    1. Применение пользовательского элемента UserControl1.
    2. Подгружаем в StackPanel.DataContext тег Parameter из XML-данных. Этот тег становится 
    корневым и дальнейшие запросы XPath идут уже к нему.
    3. my - пространство имен с классом ClassLibrary1, являющееся атрибутом xmlns:my
    элемента Window: xmlns:my="clr-namespace:ClassLibrary1;assembly=ClassLibrary1"
    
    -->
    <StackPanel DataContext="{Binding XPath=Configuration/Equipment/Parameter}"
                HorizontalAlignment="Center" VerticalAlignment="Center">

        <!--
        Запрос XPath на привязку данных тега <Amperage /> или <Voltage /> к 
        UserControl1.DataContext
        -->
        <StackPanel Orientation="Vertical">
            <StackPanel Orientation="Horizontal">
                <my:UserControl1 DataContext="{Binding XPath=Amperage}"/>
                <TextBlock Text="sdfsdf"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <my:UserControl1 DataContext="{Binding XPath=Voltage}"/>
                <TextBlock Text="sdfsdf"/>
            </StackPanel>
        </StackPanel>
    </StackPanel>
</Window>
