<!--
2021.08.20 17:17 IMM
-->
    
<UserControl x:Class="DefectCheckControlLibrary.DefectCheckControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DefectCheckControlLibrary"
             xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:control="clr-namespace:ULControlLibrary;assembly=ULControlLibrary"
             mc:Ignorable="d">

    <UserControl.Resources>
        <local:XmlAttributeConverter x:Key="XmlAttributeConverter" />
        <local:BoolInverterConverter x:Key="BoolInverterConverter" />
    </UserControl.Resources>
    
    <GroupBox Header="{Binding XPath='Settings/Resume/@description'}"
                  HorizontalAlignment="Center">

        <DataGrid ItemsSource="{Binding XPath='Settings/Slot/Item'}" AutoGenerateColumns="False" Margin="0,5,0,0">
            
            <!--4 колонки-->
            <DataGrid.Columns>

                <!--//////////////////////////////////Первая колонка//////////////////////////////////-->
                <!--
                    Чтобы получить доступ ко всем атрибутам @key тегов <Item>, входящих в тег <Slot>, 
                    нужно привязать теги Slot/Item в родительский элемент DataGrid относительно
                    элемента DataGridTextColumn
                -->
                <DataGridTextColumn Binding="{Binding XPath='@key'}"><!--№ Позиции: 1, 2, ..., 18-->

                    <DataGridTextColumn.Header>
                        <!--
                            Если не указать тег верхнего уровня (Slot) перед именем атрибута @title, т.е. 
                            "XPath='Slot/@title'", то значение атрибута @title будет взято из тега верхнего 
                            уровня над тегом Slot, т.е. из тега Settings
                        -->
                        <TextBlock Text="{Binding XPath='Settings/Slot/@title'}"
                                       DataContextChanged="header_DataContextChanged"/>
                    </DataGridTextColumn.Header>

                </DataGridTextColumn>
                <!--//////////////////////////////////Первая колонка//////////////////////////////////-->


                <!--//////////////////////////////////Вторая колонка//////////////////////////////////-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <control:ULControl DataContext="{Binding XPath='//Phosphor'}"
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center"
                                               Selector.IsSelected="{Binding XPath='@Phosphor'}"
                                               />

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--//////////////////////////////////Вторая колонка//////////////////////////////////-->


                <!--//////////////////////////////////Третья колонка//////////////////////////////////-->
                <!--
                    DataGridTemplateColumn Класс - Представляет столбец DataGrid, в ячейках которого
                    размещается содержимое, определяемое шаблоном.
                
                    DataGridTemplateColumnТип позволяет создавать собственные типы столбцов, указывая
                    шаблоны ячеек, которые будут использоваться при отображении и изменении значений. 
                    Чтобы указать шаблон, используемый для вывода содержимого ячейки, которая не
                    находится в режиме редактирования, установите CellTemplate свойство.
                -->
                <DataGridTemplateColumn>
                    <!--
                        DataGridTemplateColumn.CellTemplate Свойство - Получает или задает шаблон,
                        используемый для отображения содержимого ячейки, находящейся не в режиме
                        редактирования.
                    -->
                    <DataGridTemplateColumn.CellTemplate>
                        <!--
                            Шаблон данных (data template) — это фрагмент XAML-разметки, который 
                            определяет, как привязанный объект данных должен быть отображен.
                        -->
                        <DataTemplate>

                            <toolkit:CheckComboBox HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center" 
                                                   ItemsSource="{Binding XPath='//Defect/Type/Item/@title', Converter={StaticResource XmlAttributeConverter}}"
                                                   Delimiter=";"
                                                   />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--//////////////////////////////////Третья колонка//////////////////////////////////-->

                
                <!--////////////////////////////////Четвертая колонка/////////////////////////////////-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <StackPanel>
                                <RadioButton GroupName="{Binding XPath='@key'}" Content="{Binding XPath='//Resume/Type/Item[1]/@title'}" IsChecked="{Binding XPath='@resume'}"/>
                                <RadioButton GroupName="{Binding XPath='@key'}" Content="{Binding XPath='//Resume/Type/Item[2]/@title'}" IsChecked="{Binding XPath='@resume', 
                                    Converter={StaticResource BoolInverterConverter}}" />
                            </StackPanel>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--////////////////////////////////Четвертая колонка/////////////////////////////////-->
                
            </DataGrid.Columns>

        </DataGrid>

    </GroupBox>
</UserControl>
